How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It only contains the parts where the differences are. Easier to find the bugs and see where the changes happen

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Keep track of all the changes. May change things back and forth

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually:
        pros: more flexible. The proper size of a commit contains one logical change
        cons: sometimes may forget to commit or make not-suitable sized commit
    Automatically:
        pros: no need to do it yourself, no need to worry about forgetting to saved
        cons: each version may not have a logical meaning

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed for programming. Programming always involves multiple files and those files should be tracked all together
    Google Docs works more for documenting and most of the docs are independent 

How can you use the commands git log and git diff to view the history of files?

    Use git log to see all the commands (lastest to earlies), can get the ID for each commit
    use git diff id_old id_new to compare the 2 commit

How might using version control make you more confident to make changes that
could break something?

    Because old versions can be restored. do not need to worry about losing a version

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
